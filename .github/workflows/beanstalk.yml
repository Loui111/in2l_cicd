name: ElasticBeantalk build
# on:
#   push:
#     branches:
#       - main
on:
 push:
   branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
      
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: |
          echo "{date}={$(date +'%Y%m%dT%H:%M:%S')}" >> $GITHUB_STATE
#       - name: Get current date
#         id: date
#         run: echo "::set-output name=date::$(date +'%Y%m%dT%H:%M:%S')"
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17 # JDK 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test    #테스트 제외 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 278709831987.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: cicd_private_test
          IMAGE_TAG: $GITHUB_SHA
#           IMAGE_TAG: ${{ env.date }}
        run: |
          docker buildx build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD_HH-mm-ss
          utcOffset: "+09:00"

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cd deploy && zip -r deploy.zip .
          
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v14
        with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: in2l_cicd_beanstack
          environment_name: In2lcicdbeanstack-env
          version_label: earth-docker-${{steps.current-time.outputs.formattedTime}}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 200
